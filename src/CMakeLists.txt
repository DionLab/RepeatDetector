ADD_EXECUTABLE(GenPRF GenPRF.c)
SET(THREAD_EXECUTABLES ${THREAD_EXECUTABLES} GenPRF)

IF(HANDLE_SSE41)
	ADD_EXECUTABLE(	RepeatDetecter RepeatDetecter.c system.c)
	TARGET_LINK_LIBRARIES(RepeatDetecter prf_shared)
  SET(THREAD_SOURCES ${THREAD_SOURCES} prg/RepeatDetecter.c)
  SET(THREAD_EXECUTABLES ${THREAD_EXECUTABLES} RepeatDetecter)
  ADD_DEPENDENCIES(RepeatDetecter git_version)
ENDIF(HANDLE_SSE41)


SET(EXECUTABLES ${THREAD_EXECUTABLES})

IF(USE_AFFINITY)
  SET_PROPERTY(TARGET ${THREAD_EXECUTABLES} APPEND PROPERTY COMPILE_DEFINITIONS __USE_AFFINITY__)
ENDIF(USE_AFFINITY)

# IF(USE_RPATH AND NOT STANDALONE)
#   SET_PROPERTY(TARGET ${EXECUTABLES} PROPERTY INSTALL_RPATH_USE_LINK_PATH TRUE)
# ENDIF(USE_RPATH AND NOT STANDALONE)

IF(STANDALONE)
  SET_PROPERTY(TARGET ${EXECUTABLES} APPEND PROPERTY LINK_FLAGS -static)
ENDIF(STANDALONE)

IF(CMAKE_COMPILER_IS_INTELCC)
  FOREACH(target IN LISTS THREAD_EXECUTABLES)
     TARGET_LINK_LIBRARIES(${target} imf m)
  ENDFOREACH()
ELSE(CMAKE_COMPILER_IS_INTELCC)
  FOREACH(target IN LISTS THREAD_EXECUTABLES)
     TARGET_LINK_LIBRARIES(${target} m)
  ENDFOREACH()
ENDIF(CMAKE_COMPILER_IS_INTELCC)

IF(THREADS_HAVE_PTHREAD_ARG)
  SET_PROPERTY(SOURCE ${THREAD_SOURCES}
               APPEND PROPERTY COMPILE_FLAGS -pthread
               APPEND PROPERTY LINK_FLAGS -pthread)
ELSE(THREADS_HAVE_PTHREAD_ARG)
  FOREACH(target IN LISTS THREAD_EXECUTABLES)
     TARGET_LINK_LIBRARIES(${target} ${CMAKE_THREAD_LIBS_INIT})
  ENDFOREACH()
ENDIF(THREADS_HAVE_PTHREAD_ARG)

#########################################################################################
# Tests 
IF (BUILD_TESTING)
  INCLUDE(${PROJECT_SOURCE_DIR}/cmake/tests/TestSuite.cmake)
ENDIF(BUILD_TESTING)

#########################################################################################
# Installation
INSTALL(TARGETS ${EXECUTABLES}
        RUNTIME DESTINATION bin
        LIBRARY DESTINATION lib
        COMPONENT Applications
)

IF(prf_shared)
	INSTALL(FILES $<TARGET_FILE:prf_shared> 
					DESTINATION lib 
					PERMISSIONS OWNER_EXECUTE OWNER_READ OWNER_WRITE
											GROUP_EXECUTE GROUP_READ 
											WORLD_EXECUTE WORLD_READ)

	get_target_property(deps prf_shared IMPORTED_LINK_INTERFACE_LIBRARIES_RELEASE)
	FOREACH( lib IN LISTS deps)
		IF( "${lib}" MATCHES "^${PROJECT_BINARY_DIR}") 
			MESSAGE(STATUS "Lib ${lib} <> ${PROJECT_BINARY_DIR}")
			IF ( IS_SYMLINK ${lib} )
				GET_FILENAME_COMPONENT(XYZ ${lib} REALPATH)
				SET(lib ${XYZ})
			ENDIF(IS_SYMLINK ${lib})
			INSTALL(FILES ${lib}
							DESTINATION lib
							PERMISSIONS OWNER_EXECUTE OWNER_READ OWNER_WRITE
													GROUP_EXECUTE GROUP_READ 
													WORLD_EXECUTE WORLD_READ) 
		ENDIF( "${lib}" MATCHES "^${PROJECT_BINARY_DIR}")
	ENDFOREACH(lib IN LISTS deps)
ENDIF(prf_shared)
